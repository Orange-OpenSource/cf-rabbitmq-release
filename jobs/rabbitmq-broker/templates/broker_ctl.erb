#!/bin/bash

#
# rabbitmq_broker RabbitMQ service broker
#

set -e

NAME=rabbitmq_broker
BROKER=/var/vcap/packages/rabbitmq-broker/bin/rabbitmq-broker
DESC="RabbitMQ service broker"
USER=vcap

JOB_DIR=/var/vcap/jobs/rabbitmq-broker
CONFIG=$JOB_DIR/config/rabbitmq_broker.yml
INIT_LOG_DIR=/var/vcap/sys/log/rabbitmq-broker

PID_FILE=/var/vcap/sys/run/rabbitmq-broker/pid

START_PROG=/usr/bin/setsid
TIMESTAMP=/bin/date

source /var/vcap/packages/rabbitmq-common/utils.sh

test -x "${BROKER}"
test -x "${START_PROG}"
test -f "${CONFIG}"

ensure_dir() {
    DIR=$1
    if [ ! -d "${DIR}" ] ; then
        mkdir -p "${DIR}"
        chown -R "${USER}":"${USER}" "${DIR}"
        chmod 755 "${DIR}"
    fi
}

ensure_dirs() {
    ensure_dir "$(dirname "${PID_FILE}")"
}

start_broker() {
    pid_guard "$PIDFILE" "RabbitMQ Broker"
    ensure_dirs

    echo "$("${TIMESTAMP}"): Starting RabbitMQ service broker" >> "${INIT_LOG_DIR}/startup_stdout.log"
    echo $$ > $PID_FILE
    set +e
    exec chpst -u vcap:vcap "${BROKER}" "${CONFIG}" \
        1>> "${INIT_LOG_DIR}/startup_stdout.log" \
        2>> "${INIT_LOG_DIR}/startup_stderr.log" \
        0<&-
}

stop_broker() {
    kill_and_wait $PIDFILE
}

# RETVAL = 0 if running, != 0 if stopped
status_broker() {
    if [ ! -f "${PID_FILE}" ]; then
        exit 1
    fi

    if pid_is_running "${PID_FILE}"; then
        exit 0
    fi

    exit 3
}

restart_broker() {
    stop_broker
    start_broker
}

case "$1" in
    start)
        echo -n "Starting ${DESC}: "
        start_broker
        echo "${NAME}."
        ;;
    stop)
        echo -n "Stopping ${DESC}: "
        stop_broker
        echo "${NAME}."
        ;;
    status)
        status_broker
        ;;
    force-reload|reload|restart)
        echo -n "Restarting ${DESC}: "
        restart_broker
        echo "${NAME}."
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|reload|force-reload}" >&2
        exit 1
        ;;
esac

